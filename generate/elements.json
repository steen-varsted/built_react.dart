{
    "globalAttributes": [
        {
            "name": "accesskey",
            "description": "Defines a keyboard shortcut to activate or add focus to the element."
        },
        {
            "name": "autocapitalize",
            "description": "Controls whether and how text input is automatically capitalized as it is entered/edited by the user."
        },
        {
            "name": "class",
            "description": "Often used with CSS to style elements with common properties."
        },
        {
            "name": "contenteditable",
            "description": "Indicates whether the element's content is editable."
        },
        {
            "name": "contextmenu",
            "description": "Defines the ID of a <menu> element which will serve as the element's context menu."
        },
        {
            "name": "data-*",
            "description": "Lets you attach custom attributes to an HTML element."
        },
        {
            "name": "dir",
            "description": "Defines the text direction. Allowed values are ltr (Left-To-Right) or rtl (Right-To-Left)"
        },
        {
            "name": "draggable",
            "description": "Defines whether the element can be dragged."
        },
        {
            "name": "dropzone",
            "description": "Indicates that the element accept the dropping of content on it."
        },
        {
            "name": "hidden",
            "description": "Prevents rendering of given element, while keeping child elements, e.g. script elements, active."
        },
        {
            "name": "id",
            "description": "Often used with CSS to style a specific element. The value of this attribute must be unique."
        },
        {
            "name": "itemprop",
            "description": " "
        },
        {
            "name": "lang",
            "description": "Defines the language used in the element."
        },
        {
            "name": "slot",
            "description": "Assigns a slot in a shadow DOM shadow tree to an element."
        },
        {
            "name": "spellcheck",
            "description": "Indicates whether spell checking is allowed for the element."
        },
        {
            "name": "style",
            "description": "Defines CSS styles which will override styles previously set."
        },
        {
            "name": "tabindex",
            "description": "Overrides the browser's default tab order and follows the one specified instead."
        },
        {
            "name": "title",
            "description": "Text to be displayed in a tooltip when hovering over the element."
        },
        {
            "name": "translate",
            "description": "Specify whether an element’s attribute values and the values of its Text node children are to be translated when the page is localized, or whether to leave them unchanged."
        }
    ],
    "tags": {
        "form": [
            {
                "name": "accept",
                "description": "List of types the server accepts, typically a file type."
            },
            {
                "name": "accept-charset",
                "description": "List of supported charsets."
            },
            {
                "name": "action",
                "description": "The URI of a program that processes the information submitted via the form."
            },
            {
                "name": "autocomplete",
                "description": "Indicates whether controls in this form can by default have their values automatically completed by the browser."
            },
            {
                "name": "enctype",
                "description": "Defines the content type of the form date when the method is POST."
            },
            {
                "name": "method",
                "description": "Defines which HTTP method to use when submitting the form. Can be GET (default) or POST."
            },
            {
                "name": "name",
                "description": "Name of the element. For example used by the server to identify the fields in form submits."
            },
            {
                "name": "novalidate",
                "description": "This attribute indicates that the form shouldn't be validated when submitted."
            },
            {
                "name": "target",
                "description": " "
            }
        ],
        "input": [
            {
                "name": "accept",
                "description": "List of types the server accepts, typically a file type."
            },
            {
                "name": "alt",
                "description": "Alternative text in case an image can't be displayed."
            },
            {
                "name": "autocomplete",
                "description": "Indicates whether controls in this form can by default have their values automatically completed by the browser."
            },
            {
                "name": "autofocus",
                "description": "The element should be automatically focused after the page loaded."
            },
            {
                "name": "checked",
                "description": "Indicates whether the element should be checked on page load."
            },
            {
                "name": "dirname",
                "description": " "
            },
            {
                "name": "disabled",
                "description": "Indicates whether the user can interact with the element."
            },
            {
                "name": "form",
                "description": "Indicates the form that is the owner of the element."
            },
            {
                "name": "formaction",
                "description": "Indicates the action of the element, overriding the action defined in the <form>."
            },
            {
                "name": "height",
                "description": "\n    Specifies the height of elements listed here. For all other elements, use the CSS height property.\n\n    \n    Note: In some instances, such as <div>, this is a legacy attribute, in which case the CSS height property should be used instead.\n    \n   "
            },
            {
                "name": "list",
                "description": "Identifies a list of pre-defined options to suggest to the user."
            },
            {
                "name": "max",
                "description": "Indicates the maximum value allowed."
            },
            {
                "name": "maxlength",
                "description": "Defines the maximum number of characters allowed in the element."
            },
            {
                "name": "minlength",
                "description": "Defines the minimum number of characters allowed in the element."
            },
            {
                "name": "min",
                "description": "Indicates the minimum value allowed."
            },
            {
                "name": "multiple",
                "description": "Indicates whether multiple values can be entered in an input of the type email or file."
            },
            {
                "name": "name",
                "description": "Name of the element. For example used by the server to identify the fields in form submits."
            },
            {
                "name": "pattern",
                "description": "Defines a regular expression which the element's value will be validated against."
            },
            {
                "name": "placeholder",
                "description": "Provides a hint to the user of what can be entered in the field."
            },
            {
                "name": "readonly",
                "description": "Indicates whether the element can be edited."
            },
            {
                "name": "required",
                "description": "Indicates whether this element is required to fill out or not."
            },
            {
                "name": "size",
                "description": "Defines the width of the element (in pixels). If the element's type attribute is text or password then it's the number of characters."
            },
            {
                "name": "src",
                "description": "The URL of the embeddable content."
            },
            {
                "name": "step",
                "description": " "
            },
            {
                "name": "type",
                "description": "Defines the type of the element."
            },
            {
                "name": "usemap",
                "description": " "
            },
            {
                "name": "value",
                "description": "Defines a default value which will be displayed in the element on page load."
            },
            {
                "name": "width",
                "description": "\n    For the elements listed here, this establishes the element's width.\n\n    \n    Note: For all other instances, such as <div>, this is a legacy attribute, in which case the CSS width property should be used instead.\n    \n   "
            }
        ],
        "applet": [
            {
                "name": "align",
                "description": "Specifies the horizontal alignment of the element."
            },
            {
                "name": "alt",
                "description": "Alternative text in case an image can't be displayed."
            },
            {
                "name": "code",
                "description": "Specifies the URL of the applet's class file to be loaded and executed."
            },
            {
                "name": "codebase",
                "description": "This attribute gives the absolute or relative URL of the directory where applets' .class files referenced by the code attribute are stored."
            }
        ],
        "caption": [
            {
                "name": "align",
                "description": "Specifies the horizontal alignment of the element."
            }
        ],
        "col": [
            {
                "name": "align",
                "description": "Specifies the horizontal alignment of the element."
            },
            {
                "name": "bgcolor",
                "description": "\n    Background color of the element.\n\n    \n    Note: This is a legacy attribute. Please use the CSS background-color property instead.\n    \n   "
            },
            {
                "name": "span",
                "description": " "
            }
        ],
        "colgroup": [
            {
                "name": "align",
                "description": "Specifies the horizontal alignment of the element."
            },
            {
                "name": "bgcolor",
                "description": "\n    Background color of the element.\n\n    \n    Note: This is a legacy attribute. Please use the CSS background-color property instead.\n    \n   "
            },
            {
                "name": "span",
                "description": " "
            }
        ],
        "hr": [
            {
                "name": "align",
                "description": "Specifies the horizontal alignment of the element."
            },
            {
                "name": "color",
                "description": "\n    This attribute sets the text color using either a named color or a color specified in the hexadecimal #RRGGBB format.\n\n    \n    Note: This is a legacy attribute. Please use the CSS color property instead.\n    \n   "
            }
        ],
        "iframe": [
            {
                "name": "align",
                "description": "Specifies the horizontal alignment of the element."
            },
            {
                "name": "allow",
                "description": "Specifies a feature-policy for the iframe."
            },
            {
                "name": "csp",
                "description": "Specifies the Content Security Policy that an embedded document must agree to enforce upon itself."
            },
            {
                "name": "height",
                "description": "\n    Specifies the height of elements listed here. For all other elements, use the CSS height property.\n\n    \n    Note: In some instances, such as <div>, this is a legacy attribute, in which case the CSS height property should be used instead.\n    \n   "
            },
            {
                "name": "importance",
                "description": "Indicates the relative fetch priority for the resource."
            },
            {
                "name": "lazyload",
                "description": "Indicates if the element should be loaded lazily."
            },
            {
                "name": "name",
                "description": "Name of the element. For example used by the server to identify the fields in form submits."
            },
            {
                "name": "sandbox",
                "description": "Stops a document loaded in an iframe from using certain features (such as submitting forms or opening new windows)."
            },
            {
                "name": "src",
                "description": "The URL of the embeddable content."
            },
            {
                "name": "srcdoc",
                "description": " "
            },
            {
                "name": "width",
                "description": "\n    For the elements listed here, this establishes the element's width.\n\n    \n    Note: For all other instances, such as <div>, this is a legacy attribute, in which case the CSS width property should be used instead.\n    \n   "
            }
        ],
        "img": [
            {
                "name": "align",
                "description": "Specifies the horizontal alignment of the element."
            },
            {
                "name": "alt",
                "description": "Alternative text in case an image can't be displayed."
            },
            {
                "name": "border",
                "description": "\n    The border width.\n\n    \n    Note: This is a legacy attribute. Please use the CSS border property instead.\n    \n   "
            },
            {
                "name": "crossorigin",
                "description": "How the element handles cross-origin requests"
            },
            {
                "name": "decoding",
                "description": "Indicates the preferred method to decode the image."
            },
            {
                "name": "height",
                "description": "\n    Specifies the height of elements listed here. For all other elements, use the CSS height property.\n\n    \n    Note: In some instances, such as <div>, this is a legacy attribute, in which case the CSS height property should be used instead.\n    \n   "
            },
            {
                "name": "importance",
                "description": "Indicates the relative fetch priority for the resource."
            },
            {
                "name": "ismap",
                "description": "Indicates that the image is part of a server-side image map."
            },
            {
                "name": "lazyload",
                "description": "Indicates if the element should be loaded lazily."
            },
            {
                "name": "sizes",
                "description": " "
            },
            {
                "name": "src",
                "description": "The URL of the embeddable content."
            },
            {
                "name": "srcset",
                "description": "One or more responsive image candidates."
            },
            {
                "name": "usemap",
                "description": " "
            },
            {
                "name": "width",
                "description": "\n    For the elements listed here, this establishes the element's width.\n\n    \n    Note: For all other instances, such as <div>, this is a legacy attribute, in which case the CSS width property should be used instead.\n    \n   "
            }
        ],
        "table": [
            {
                "name": "align",
                "description": "Specifies the horizontal alignment of the element."
            },
            {
                "name": "bgcolor",
                "description": "\n    Background color of the element.\n\n    \n    Note: This is a legacy attribute. Please use the CSS background-color property instead.\n    \n   "
            },
            {
                "name": "border",
                "description": "\n    The border width.\n\n    \n    Note: This is a legacy attribute. Please use the CSS border property instead.\n    \n   "
            },
            {
                "name": "summary",
                "description": " "
            }
        ],
        "tbody": [
            {
                "name": "align",
                "description": "Specifies the horizontal alignment of the element."
            },
            {
                "name": "bgcolor",
                "description": "\n    Background color of the element.\n\n    \n    Note: This is a legacy attribute. Please use the CSS background-color property instead.\n    \n   "
            }
        ],
        "td": [
            {
                "name": "align",
                "description": "Specifies the horizontal alignment of the element."
            },
            {
                "name": "bgcolor",
                "description": "\n    Background color of the element.\n\n    \n    Note: This is a legacy attribute. Please use the CSS background-color property instead.\n    \n   "
            },
            {
                "name": "colspan",
                "description": "The colspan attribute defines the number of columns a cell should span."
            },
            {
                "name": "headers",
                "description": "IDs of the <th> elements which applies to this element."
            },
            {
                "name": "rowspan",
                "description": "Defines the number of rows a table cell should span over."
            }
        ],
        "tfoot": [
            {
                "name": "align",
                "description": "Specifies the horizontal alignment of the element."
            },
            {
                "name": "bgcolor",
                "description": "\n    Background color of the element.\n\n    \n    Note: This is a legacy attribute. Please use the CSS background-color property instead.\n    \n   "
            }
        ],
        "th": [
            {
                "name": "align",
                "description": "Specifies the horizontal alignment of the element."
            },
            {
                "name": "bgcolor",
                "description": "\n    Background color of the element.\n\n    \n    Note: This is a legacy attribute. Please use the CSS background-color property instead.\n    \n   "
            },
            {
                "name": "colspan",
                "description": "The colspan attribute defines the number of columns a cell should span."
            },
            {
                "name": "headers",
                "description": "IDs of the <th> elements which applies to this element."
            },
            {
                "name": "rowspan",
                "description": "Defines the number of rows a table cell should span over."
            },
            {
                "name": "scope",
                "description": "Defines the cells that the header test (defined in the th element) relates to."
            }
        ],
        "thead": [
            {
                "name": "align",
                "description": "Specifies the horizontal alignment of the element."
            }
        ],
        "tr": [
            {
                "name": "align",
                "description": "Specifies the horizontal alignment of the element."
            },
            {
                "name": "bgcolor",
                "description": "\n    Background color of the element.\n\n    \n    Note: This is a legacy attribute. Please use the CSS background-color property instead.\n    \n   "
            }
        ],
        "area": [
            {
                "name": "alt",
                "description": "Alternative text in case an image can't be displayed."
            },
            {
                "name": "coords",
                "description": "A set of values specifying the coordinates of the hot-spot region."
            },
            {
                "name": "download",
                "description": "Indicates that the hyperlink is to be used for downloading a resource."
            },
            {
                "name": "href",
                "description": "The URL of a linked resource."
            },
            {
                "name": "hreflang",
                "description": "Specifies the language of the linked resource."
            },
            {
                "name": "media",
                "description": "Specifies a hint of the media for which the linked resource was designed."
            },
            {
                "name": "ping",
                "description": " "
            },
            {
                "name": "rel",
                "description": "Specifies the relationship of the target object to the link object."
            },
            {
                "name": "shape",
                "description": " "
            },
            {
                "name": "target",
                "description": " "
            }
        ],
        "script": [
            {
                "name": "async",
                "description": "Indicates that the script should be executed asynchronously."
            },
            {
                "name": "charset",
                "description": "Declares the character encoding of the page or script."
            },
            {
                "name": "crossorigin",
                "description": "How the element handles cross-origin requests"
            },
            {
                "name": "defer",
                "description": "Indicates that the script should be executed after the page has been parsed."
            },
            {
                "name": "importance",
                "description": "Indicates the relative fetch priority for the resource."
            },
            {
                "name": "integrity",
                "description": "\n    Security Feature that allows browsers to verify what they fetch.\n   "
            },
            {
                "name": "language",
                "description": "Defines the script language used in the element."
            },
            {
                "name": "src",
                "description": "The URL of the embeddable content."
            },
            {
                "name": "type",
                "description": "Defines the type of the element."
            }
        ],
        "textarea": [
            {
                "name": "autocomplete",
                "description": "Indicates whether controls in this form can by default have their values automatically completed by the browser."
            },
            {
                "name": "autofocus",
                "description": "The element should be automatically focused after the page loaded."
            },
            {
                "name": "cols",
                "description": "Defines the number of columns in a textarea."
            },
            {
                "name": "dirname",
                "description": " "
            },
            {
                "name": "disabled",
                "description": "Indicates whether the user can interact with the element."
            },
            {
                "name": "form",
                "description": "Indicates the form that is the owner of the element."
            },
            {
                "name": "maxlength",
                "description": "Defines the maximum number of characters allowed in the element."
            },
            {
                "name": "minlength",
                "description": "Defines the minimum number of characters allowed in the element."
            },
            {
                "name": "name",
                "description": "Name of the element. For example used by the server to identify the fields in form submits."
            },
            {
                "name": "placeholder",
                "description": "Provides a hint to the user of what can be entered in the field."
            },
            {
                "name": "readonly",
                "description": "Indicates whether the element can be edited."
            },
            {
                "name": "required",
                "description": "Indicates whether this element is required to fill out or not."
            },
            {
                "name": "rows",
                "description": "Defines the number of rows in a text area."
            },
            {
                "name": "wrap",
                "description": "Indicates whether the text should be wrapped."
            }
        ],
        "button": [
            {
                "name": "autofocus",
                "description": "The element should be automatically focused after the page loaded."
            },
            {
                "name": "disabled",
                "description": "Indicates whether the user can interact with the element."
            },
            {
                "name": "form",
                "description": "Indicates the form that is the owner of the element."
            },
            {
                "name": "formaction",
                "description": "Indicates the action of the element, overriding the action defined in the <form>."
            },
            {
                "name": "name",
                "description": "Name of the element. For example used by the server to identify the fields in form submits."
            },
            {
                "name": "type",
                "description": "Defines the type of the element."
            },
            {
                "name": "value",
                "description": "Defines a default value which will be displayed in the element on page load."
            }
        ],
        "keygen": [
            {
                "name": "autofocus",
                "description": "The element should be automatically focused after the page loaded."
            },
            {
                "name": "challenge",
                "description": "A challenge string that is submitted along with the public key."
            },
            {
                "name": "disabled",
                "description": "Indicates whether the user can interact with the element."
            },
            {
                "name": "form",
                "description": "Indicates the form that is the owner of the element."
            },
            {
                "name": "keytype",
                "description": "Specifies the type of key generated."
            },
            {
                "name": "name",
                "description": "Name of the element. For example used by the server to identify the fields in form submits."
            }
        ],
        "select": [
            {
                "name": "autofocus",
                "description": "The element should be automatically focused after the page loaded."
            },
            {
                "name": "disabled",
                "description": "Indicates whether the user can interact with the element."
            },
            {
                "name": "form",
                "description": "Indicates the form that is the owner of the element."
            },
            {
                "name": "multiple",
                "description": "Indicates whether multiple values can be entered in an input of the type email or file."
            },
            {
                "name": "name",
                "description": "Name of the element. For example used by the server to identify the fields in form submits."
            },
            {
                "name": "required",
                "description": "Indicates whether this element is required to fill out or not."
            },
            {
                "name": "size",
                "description": "Defines the width of the element (in pixels). If the element's type attribute is text or password then it's the number of characters."
            }
        ],
        "audio": [
            {
                "name": "autoplay",
                "description": "The audio or video should play as soon as possible."
            },
            {
                "name": "buffered",
                "description": "Contains the time range of already buffered media."
            },
            {
                "name": "controls",
                "description": "Indicates whether the browser should show playback controls to the user."
            },
            {
                "name": "crossorigin",
                "description": "How the element handles cross-origin requests"
            },
            {
                "name": "loop",
                "description": "Indicates whether the media should start playing from the start when it's finished."
            },
            {
                "name": "muted",
                "description": "Indicates whether the audio will be initially silenced on page load."
            },
            {
                "name": "preload",
                "description": "Indicates whether the whole resource, parts of it or nothing should be preloaded."
            },
            {
                "name": "src",
                "description": "The URL of the embeddable content."
            }
        ],
        "video": [
            {
                "name": "autoplay",
                "description": "The audio or video should play as soon as possible."
            },
            {
                "name": "buffered",
                "description": "Contains the time range of already buffered media."
            },
            {
                "name": "controls",
                "description": "Indicates whether the browser should show playback controls to the user."
            },
            {
                "name": "crossorigin",
                "description": "How the element handles cross-origin requests"
            },
            {
                "name": "height",
                "description": "\n    Specifies the height of elements listed here. For all other elements, use the CSS height property.\n\n    \n    Note: In some instances, such as <div>, this is a legacy attribute, in which case the CSS height property should be used instead.\n    \n   "
            },
            {
                "name": "loop",
                "description": "Indicates whether the media should start playing from the start when it's finished."
            },
            {
                "name": "muted",
                "description": "Indicates whether the audio will be initially silenced on page load."
            },
            {
                "name": "poster",
                "description": "A URL indicating a poster frame to show until the user plays or seeks."
            },
            {
                "name": "preload",
                "description": "Indicates whether the whole resource, parts of it or nothing should be preloaded."
            },
            {
                "name": "src",
                "description": "The URL of the embeddable content."
            },
            {
                "name": "width",
                "description": "\n    For the elements listed here, this establishes the element's width.\n\n    \n    Note: For all other instances, such as <div>, this is a legacy attribute, in which case the CSS width property should be used instead.\n    \n   "
            }
        ],
        "body": [
            {
                "name": "bgcolor",
                "description": "\n    Background color of the element.\n\n    \n    Note: This is a legacy attribute. Please use the CSS background-color property instead.\n    \n   "
            }
        ],
        "marquee": [
            {
                "name": "bgcolor",
                "description": "\n    Background color of the element.\n\n    \n    Note: This is a legacy attribute. Please use the CSS background-color property instead.\n    \n   "
            },
            {
                "name": "loop",
                "description": "Indicates whether the media should start playing from the start when it's finished."
            }
        ],
        "object": [
            {
                "name": "border",
                "description": "\n    The border width.\n\n    \n    Note: This is a legacy attribute. Please use the CSS border property instead.\n    \n   "
            },
            {
                "name": "data",
                "description": "Specifies the URL of the resource."
            },
            {
                "name": "form",
                "description": "Indicates the form that is the owner of the element."
            },
            {
                "name": "height",
                "description": "\n    Specifies the height of elements listed here. For all other elements, use the CSS height property.\n\n    \n    Note: In some instances, such as <div>, this is a legacy attribute, in which case the CSS height property should be used instead.\n    \n   "
            },
            {
                "name": "name",
                "description": "Name of the element. For example used by the server to identify the fields in form submits."
            },
            {
                "name": "type",
                "description": "Defines the type of the element."
            },
            {
                "name": "usemap",
                "description": " "
            },
            {
                "name": "width",
                "description": "\n    For the elements listed here, this establishes the element's width.\n\n    \n    Note: For all other instances, such as <div>, this is a legacy attribute, in which case the CSS width property should be used instead.\n    \n   "
            }
        ],
        "meta": [
            {
                "name": "charset",
                "description": "Declares the character encoding of the page or script."
            },
            {
                "name": "content",
                "description": "A value associated with http-equiv or name depending on the context."
            },
            {
                "name": "http-equiv",
                "description": "Defines a pragma directive."
            },
            {
                "name": "name",
                "description": "Name of the element. For example used by the server to identify the fields in form submits."
            }
        ],
        "command": [
            {
                "name": "checked",
                "description": "Indicates whether the element should be checked on page load."
            },
            {
                "name": "disabled",
                "description": "Indicates whether the user can interact with the element."
            },
            {
                "name": "icon",
                "description": "Specifies a picture which represents the command."
            },
            {
                "name": "radiogroup",
                "description": " "
            },
            {
                "name": "type",
                "description": "Defines the type of the element."
            }
        ],
        "blockquote": [
            {
                "name": "cite",
                "description": "Contains a URI which points to the source of the quote or change."
            }
        ],
        "del": [
            {
                "name": "cite",
                "description": "Contains a URI which points to the source of the quote or change."
            },
            {
                "name": "datetime",
                "description": "Indicates the date and time associated with the element."
            }
        ],
        "ins": [
            {
                "name": "cite",
                "description": "Contains a URI which points to the source of the quote or change."
            },
            {
                "name": "datetime",
                "description": "Indicates the date and time associated with the element."
            }
        ],
        "q": [
            {
                "name": "cite",
                "description": "Contains a URI which points to the source of the quote or change."
            }
        ],
        "basefont": [
            {
                "name": "color",
                "description": "\n    This attribute sets the text color using either a named color or a color specified in the hexadecimal #RRGGBB format.\n\n    \n    Note: This is a legacy attribute. Please use the CSS color property instead.\n    \n   "
            }
        ],
        "font": [
            {
                "name": "color",
                "description": "\n    This attribute sets the text color using either a named color or a color specified in the hexadecimal #RRGGBB format.\n\n    \n    Note: This is a legacy attribute. Please use the CSS color property instead.\n    \n   "
            }
        ],
        "link": [
            {
                "name": "crossorigin",
                "description": "How the element handles cross-origin requests"
            },
            {
                "name": "href",
                "description": "The URL of a linked resource."
            },
            {
                "name": "hreflang",
                "description": "Specifies the language of the linked resource."
            },
            {
                "name": "importance",
                "description": "Indicates the relative fetch priority for the resource."
            },
            {
                "name": "integrity",
                "description": "\n    Security Feature that allows browsers to verify what they fetch.\n   "
            },
            {
                "name": "media",
                "description": "Specifies a hint of the media for which the linked resource was designed."
            },
            {
                "name": "rel",
                "description": "Specifies the relationship of the target object to the link object."
            },
            {
                "name": "sizes",
                "description": " "
            }
        ],
        "time": [
            {
                "name": "datetime",
                "description": "Indicates the date and time associated with the element."
            }
        ],
        "track": [
            {
                "name": "default",
                "description": "Indicates that the track should be enabled unless the user's preferences indicate something different."
            },
            {
                "name": "kind",
                "description": "Specifies the kind of text track."
            },
            {
                "name": "label",
                "description": "Specifies a user-readable title of the text track."
            },
            {
                "name": "src",
                "description": "The URL of the embeddable content."
            },
            {
                "name": "srclang",
                "description": " "
            }
        ],
        "fieldset": [
            {
                "name": "disabled",
                "description": "Indicates whether the user can interact with the element."
            },
            {
                "name": "form",
                "description": "Indicates the form that is the owner of the element."
            },
            {
                "name": "name",
                "description": "Name of the element. For example used by the server to identify the fields in form submits."
            }
        ],
        "optgroup": [
            {
                "name": "disabled",
                "description": "Indicates whether the user can interact with the element."
            }
        ],
        "option": [
            {
                "name": "disabled",
                "description": "Indicates whether the user can interact with the element."
            },
            {
                "name": "selected",
                "description": "Defines a value which will be selected on page load."
            },
            {
                "name": "value",
                "description": "Defines a default value which will be displayed in the element on page load."
            }
        ],
        "a": [
            {
                "name": "download",
                "description": "Indicates that the hyperlink is to be used for downloading a resource."
            },
            {
                "name": "href",
                "description": "The URL of a linked resource."
            },
            {
                "name": "hreflang",
                "description": "Specifies the language of the linked resource."
            },
            {
                "name": "media",
                "description": "Specifies a hint of the media for which the linked resource was designed."
            },
            {
                "name": "ping",
                "description": " "
            },
            {
                "name": "rel",
                "description": "Specifies the relationship of the target object to the link object."
            },
            {
                "name": "shape",
                "description": " "
            },
            {
                "name": "target",
                "description": " "
            }
        ],
        "label": [
            {
                "name": "for",
                "description": "Describes elements which belongs to this one."
            },
            {
                "name": "form",
                "description": "Indicates the form that is the owner of the element."
            }
        ],
        "output": [
            {
                "name": "for",
                "description": "Describes elements which belongs to this one."
            },
            {
                "name": "form",
                "description": "Indicates the form that is the owner of the element."
            },
            {
                "name": "name",
                "description": "Name of the element. For example used by the server to identify the fields in form submits."
            }
        ],
        "meter": [
            {
                "name": "form",
                "description": "Indicates the form that is the owner of the element."
            },
            {
                "name": "high",
                "description": "Indicates the lower bound of the upper range."
            },
            {
                "name": "low",
                "description": "Indicates the upper bound of the lower range."
            },
            {
                "name": "max",
                "description": "Indicates the maximum value allowed."
            },
            {
                "name": "min",
                "description": "Indicates the minimum value allowed."
            },
            {
                "name": "optimum",
                "description": "Indicates the optimal numeric value."
            },
            {
                "name": "value",
                "description": "Defines a default value which will be displayed in the element on page load."
            }
        ],
        "progress": [
            {
                "name": "form",
                "description": "Indicates the form that is the owner of the element."
            },
            {
                "name": "max",
                "description": "Indicates the maximum value allowed."
            },
            {
                "name": "value",
                "description": "Defines a default value which will be displayed in the element on page load."
            }
        ],
        "canvas": [
            {
                "name": "height",
                "description": "\n    Specifies the height of elements listed here. For all other elements, use the CSS height property.\n\n    \n    Note: In some instances, such as <div>, this is a legacy attribute, in which case the CSS height property should be used instead.\n    \n   "
            },
            {
                "name": "width",
                "description": "\n    For the elements listed here, this establishes the element's width.\n\n    \n    Note: For all other instances, such as <div>, this is a legacy attribute, in which case the CSS width property should be used instead.\n    \n   "
            }
        ],
        "embed": [
            {
                "name": "height",
                "description": "\n    Specifies the height of elements listed here. For all other elements, use the CSS height property.\n\n    \n    Note: In some instances, such as <div>, this is a legacy attribute, in which case the CSS height property should be used instead.\n    \n   "
            },
            {
                "name": "src",
                "description": "The URL of the embeddable content."
            },
            {
                "name": "type",
                "description": "Defines the type of the element."
            },
            {
                "name": "width",
                "description": "\n    For the elements listed here, this establishes the element's width.\n\n    \n    Note: For all other instances, such as <div>, this is a legacy attribute, in which case the CSS width property should be used instead.\n    \n   "
            }
        ],
        "base": [
            {
                "name": "href",
                "description": "The URL of a linked resource."
            },
            {
                "name": "target",
                "description": " "
            }
        ],
        "bgsound": [
            {
                "name": "loop",
                "description": "Indicates whether the media should start playing from the start when it's finished."
            }
        ],
        "html": [
            {
                "name": "manifest",
                "description": "Specifies the URL of the document's cache manifest."
            }
        ],
        "source": [
            {
                "name": "media",
                "description": "Specifies a hint of the media for which the linked resource was designed."
            },
            {
                "name": "sizes",
                "description": " "
            },
            {
                "name": "src",
                "description": "The URL of the embeddable content."
            },
            {
                "name": "srcset",
                "description": "One or more responsive image candidates."
            },
            {
                "name": "type",
                "description": "Defines the type of the element."
            }
        ],
        "style": [
            {
                "name": "media",
                "description": "Specifies a hint of the media for which the linked resource was designed."
            },
            {
                "name": "scoped",
                "description": " "
            },
            {
                "name": "type",
                "description": "Defines the type of the element."
            }
        ],
        "map": [
            {
                "name": "name",
                "description": "Name of the element. For example used by the server to identify the fields in form submits."
            }
        ],
        "param": [
            {
                "name": "name",
                "description": "Name of the element. For example used by the server to identify the fields in form submits."
            },
            {
                "name": "value",
                "description": "Defines a default value which will be displayed in the element on page load."
            }
        ],
        "details": [
            {
                "name": "open",
                "description": "Indicates whether the details will be shown on page load."
            }
        ],
        "ol": [
            {
                "name": "reversed",
                "description": "Indicates whether the list should be displayed in a descending order instead of a ascending."
            },
            {
                "name": "start",
                "description": "Defines the first number if other than 1."
            }
        ],
        "menu": [
            {
                "name": "type",
                "description": "Defines the type of the element."
            }
        ],
        "li": [
            {
                "name": "value",
                "description": "Defines a default value which will be displayed in the element on page load."
            }
        ],
        "abbr": [],
        "address": [],
        "article": [],
        "aside": [],
        "b": [],
        "bdi": [],
        "bdo": [],
        "br": [],
        "cite": [],
        "code": [],
        "data": [],
        "datalist": [],
        "dd": [],
        "dfn": [],
        "div": [],
        "dl": [],
        "dt": [],
        "em": [],
        "figcaption": [],
        "figure": [],
        "footer": [],
        "h1": [],
        "head": [],
        "header": [],
        "i": [],
        "kbd": [],
        "legend": [],
        "main": [],
        "mark": [],
        "nav": [],
        "noscript": [],
        "p": [],
        "picture": [],
        "pre": [],
        "rb": [],
        "rp": [],
        "rt": [],
        "rtc": [],
        "ruby": [],
        "s": [],
        "samp": [],
        "section": [],
        "slot": [],
        "small": [],
        "span": [],
        "strong": [],
        "sub": [],
        "summary": [],
        "sup": [],
        "template": [],
        "title": [],
        "u": [],
        "ul": [],
        "var": [],
        "wbr": []
    }
}